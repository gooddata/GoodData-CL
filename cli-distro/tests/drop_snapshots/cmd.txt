# This example demonstrates how to load more complex structures to GoodData
# Three datasets: department, employee, and salary are loaded are connected together
# Check the configuration files that contains the connection points and references
# see full command documentation at https://github.com/gooddata/GoodData-CL/blob/master/cli-distro/doc/CLI.md

# Create a new project
CreateProject(name="HR");

# Store the project ID to file for the subsequent two scripts
RememberProject(fileName="tests/drop_snapshots/pid");

# Load the department data file, using the XML file describing the data
UseCsv(csvDataFile="tests/drop_snapshots/department.csv",hasHeader="true",configFile="tests/drop_snapshots/department.xml");

# Generate the MAQL script describing data model for department data
GenerateMaql(maqlFile="tests/drop_snapshots/department.maql");

# Execute the MAQL script on the server
ExecuteMaql(maqlFile="tests/drop_snapshots/department.maql");

# Transfer the department data
TransferData(incremental="false");

# Load the employee data file, using the XML file describing the data
UseCsv(csvDataFile="tests/drop_snapshots/employee.csv",hasHeader="true",configFile="tests/drop_snapshots/employee.xml");

# Generate the MAQL script describing data model for employee data
GenerateMaql(maqlFile="tests/drop_snapshots/employee.maql");

# Execute the employee MAQL script on the server
ExecuteMaql(maqlFile="tests/drop_snapshots/employee.maql");

# Transfer the employee data
TransferData(incremental="false");

# Loads time dimension to the project
UseDateDimension(name="Payment");

# Generate the date dimension MAQL script
GenerateMaql(maqlFile="tests/drop_snapshots/payment_date.maql");

# Execute the date dimension MAQL
ExecuteMaql(maqlFile="tests/drop_snapshots/payment_date.maql");

# Load the salary data file, using the XML file describing the data
UseCsv(csvDataFile="tests/drop_snapshots/salary.csv",hasHeader="true",configFile="tests/drop_snapshots/salary.xml");

# Generate the MAQL script describing data model for salary data
GenerateMaql(maqlFile="tests/drop_snapshots/salary.maql");

# Execute the salary MAQL script on the server
ExecuteMaql(maqlFile="tests/drop_snapshots/salary.maql");

# Transfer the salary data
TransferData(incremental="false");

# Load the salary data file, using the XML file describing the data
UseCsv(csvDataFile="tests/drop_snapshots/salary.csv",hasHeader="true",configFile="tests/drop_snapshots/salary.xml");

# Transfer the salary data
TransferData(incremental="true");

# Load the employee data file, using the XML file describing the data
UseCsv(csvDataFile="tests/drop_snapshots/employee.csv",hasHeader="true",configFile="tests/drop_snapshots/employee.xml");

# Transfer the employee data
TransferData(incremental="true");